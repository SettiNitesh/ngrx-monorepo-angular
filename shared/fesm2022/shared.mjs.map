{"version":3,"file":"shared.mjs","sources":["../../../projects/shared/src/lib/shared.component.ts","../../../projects/shared/src/lib/shared.service.ts","../../../projects/shared/src/lib/state/category/category.action.ts","../../../projects/shared/src/lib/state/category/category.state.ts","../../../projects/shared/src/lib/state/category/category.reducer.ts","../../../projects/shared/src/lib/state/category/category.selectors.ts","../../../projects/shared/src/lib/state/counter/counter.actions.ts","../../../projects/shared/src/lib/state/counter/counter.state.ts","../../../projects/shared/src/lib/state/counter/counter.reducer.ts","../../../projects/shared/src/lib/state/counter/counter.selector.ts","../../../projects/shared/src/public-api.ts","../../../projects/shared/src/shared.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'lib-shared',\n  imports: [],\n  template: `\n    <p>\n      shared works!\n    </p>\n  `,\n  styles: ``\n})\nexport class SharedComponent {\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SharedService {\n  constructor() {}\n\n  getCategories() {\n    return [{ name: 'Horror' }, { name: 'Drama' }, { name: 'Romance' }];\n  }\n}\n","import { createAction, props } from '@ngrx/store';\nimport { ICategory } from '../../interface/category';\n\nexport const getCategories = createAction('[Category Component] GetCategories');\n\nexport const addCategory = createAction(\n  '[Category Component] Add Category',\n  props<{ category: ICategory }>()\n);\n","import { ICategory } from '../../interface/category';\n\nexport interface ICategoryState {\n  categories: ICategory[];\n}\n\nexport const initialState: ICategoryState = {\n  categories: [{ name: 'Horror' }, { name: 'Drama' }, { name: 'Romance' }],\n};\n\nexport const categories = 'categories';\n","import { createReducer, on } from '@ngrx/store';\nimport { addCategory, getCategories } from './category.action';\nimport { initialState } from './category.state';\n\nexport const categoryReducer = createReducer(\n  initialState,\n  on(getCategories, (state) => ({\n    ...state,\n    categories: state.categories,\n  })),\n  on(addCategory, (state, action) => ({\n    ...state,\n    categories: [...state.categories, action.category],\n  }))\n);\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\nimport { categories, ICategoryState } from './category.state';\n\nconst selectCategories = createFeatureSelector<ICategoryState>(categories);\n\nexport const categoriesSelector = createSelector(\n  selectCategories,\n  (state: ICategoryState) => state.categories\n);\n","import { createAction, props } from '@ngrx/store';\n\nexport const increment = createAction('[Counter] Increment');\nexport const decrement = createAction('[Counter] Decrement');\nexport const reset = createAction('reset');\nexport const addToCounter = createAction(\n  'addToCounter',\n  props<{ value: number }>()\n);\n","export interface ICounterState {\n  counter: number;\n}\n\nexport const initialCounterState: ICounterState = {\n  counter: 0,\n};\n","import { Action, createReducer, on } from '@ngrx/store';\nimport { addToCounter, decrement, increment, reset } from './counter.actions';\nimport { ICounterState, initialCounterState } from './counter.state';\n\nconst _counterReducer = createReducer(\n  initialCounterState,\n  on(increment, (state) => {\n    return { ...state, counter: state.counter + 1 };\n  }),\n  on(decrement, (state) => {\n    return { ...state, counter: state.counter - 1 };\n  }),\n  on(reset, (state) => {\n    return { ...state, counter: 0 };\n  }),\n  on(addToCounter, (state, action) => {\n    return { ...state, counter: state.counter + action.value };\n  })\n);\n\nexport const counterReducer = (\n  state: ICounterState = initialCounterState,\n  action: Action\n): ICounterState => {\n  return _counterReducer(state, action);\n};\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\nimport { ICounterState } from './counter.state';\n\nconst getCounterState = createFeatureSelector<ICounterState>('counter');\n\nexport const getCounter = createSelector(\n  getCounterState,\n  (state) => state.counter\n);\n","/*\n * Public API Surface of shared\n */\n\nexport * from './lib/shared.component';\nexport * from './lib/shared.service';\n\nexport * from './lib/interface/category';\nexport * from './lib/state/category/category.action';\nexport * from './lib/state/category/category.reducer';\nexport * from './lib/state/category/category.selectors';\nexport * from './lib/state/category/category.state';\n\nexport * from './lib/state/counter/counter.actions';\nexport * from './lib/state/counter/counter.reducer';\nexport * from './lib/state/counter/counter.selector';\nexport * from './lib/state/counter/counter.state';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}